# Copyright 2018 HM Revenue & Customs
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

# This is the main configuration file for the application.
# ~~~~~

include "backend.conf"

appName=social-care-compliance

play.http.requestHandler = "uk.gov.hmrc.play.bootstrap.http.RequestHandler"
play.http.errorHandler = "uk.gov.hmrc.play.bootstrap.http.JsonErrorHandler"
play.http.filters = "uk.gov.hmrc.play.bootstrap.filters.MicroserviceFilters"

# Define any modules used here
play.modules.enabled += "com.kenshoo.play.metrics.PlayModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.MicroserviceModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.HttpClientModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuditModule"
play.modules.enabled += "uk.gov.hmrc.play.bootstrap.AuthModule"
play.modules.enabled += "play.modules.reactivemongo.ReactiveMongoHmrcModule"

#Mongo-Db Config
cache.expiryInMinutes = 15
longLiveCache.expiryInMinutes = 1440

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# !!!WARNING!!! DO NOT CHANGE THIS ROUTER
application.router = prod.Routes


# Session Timeout
# ~~~~
# The default session timeout for the app is 15 minutes (900seconds).
# Updating this is the responsibility of the app - it must issue a new cookie with each request or the session will
# timeout 15 minutes after login (regardless of user activity).
# session.maxAge=900

# Session configuration
# ~~~~~
application.session.httpOnly=false

application.session.secure=false

# The application languages
# ~~~~~
application.langs="en"

# Controller
# ~~~~~
# By default all controllers will have authorisation, logging and
# auditing (transaction monitoring) enabled.
# The below controllers are the default exceptions to this rule.

controllers {
    com.kenshoo.play.metrics.MetricsController = {
      needsAuth = false
      needsLogging = false
      needsAuditing = false
    }
}

# Metrics plugin settings - graphite reporting is configured on a per env basis
metrics {
    name = ${appName}
    rateUnit = SECONDS
    durationUnit = SECONDS
    showSamples = true
    jvm = true
    enabled = false
}

# Microservice specific config

mongodb {
    uri = "mongodb://localhost:27017/request-corporation-tax-number"
}

auditing {
    enabled=true
    traceRequests=true

    consumer {
        baseUri {
            host = localhost
            port = 8100
        }
    }
}

pdf {

    ctutr {

        metadata {
            businessArea = "ISBC"
            queue = "ISBC-NMW-Complaints"
            formId = "SCC1"
            source = "SCC"
            target = "DMS"
        }

        save = true

    }
}

microservice {
    metrics {
        graphite {
            host = graphite
            port = 2003
            prefix = play.${appName}.
            enabled = false
        }
    }

    services {

        file-upload {
            host = localhost
            port = 8552
            callbackUrl="http://localhost:8551/request-corporation-tax-number/file-upload/callback"
        }

        pdf-generator-service {
            host = localhost
            port = 8552
        }

        file-upload-frontend {
            host = localhost
            port = 8552
        }

        auth {
            host = localhost
            port = 8500
        }

        datastream {
            host=localhost
            port=8100
        }
    }
}

mongo.encryption.enabled = false